import logging
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import asyncio
import datetime
from text_message import send_bot_message, message, welcome_message_privat
from config import BOT_TOKEN_GREEN, CHAT_ID_BI, api_key, api_exchange, ADMINS_ID
from keyboards import get_main_keyboard
from states import DownloadState
from pogodaTor import WeatherAPI, weather_text
from xchange010 import CurrencyConverter, exchange_text
from money_sell import Money_sell_converter, money_sell_text
BOT_TOKEN = BOT_TOKEN_GREEN
import time
import pytube
from moviepy.editor import *
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

from config import BOT_TOKEN_GREEN, ADMINS_ID
from keyboards import get_main_keyboard

TOKEN = BOT_TOKEN_GREEN
ADMIN_ID = ADMINS_ID

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)
CHAT_ID = CHAT_ID_BI
chat_id_group = CHAT_ID_BI
bot = Bot(token=TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

async def send_weather_message():
    await bot.send_message(CHAT_ID, weather_text)

async def send_exchange_message():
    await bot.send_message(CHAT_ID, exchange_text)

group_link = "https://t.me/torrevieja_migration"

async def send_text_message():
    await bot.send_message(CHAT_ID, message)

async def send_bot_message2():
    await bot.send_message(CHAT_ID, send_bot_message)

async def send_money_sell():
    await bot.send_message(CHAT_ID, money_sell_text)

# –•–ï–ù–î–õ–ï–† –ö–û–ú–ê–ù–î–´  /start
@dp.message_handler(commands=['start'], chat_type=types.ChatType.PRIVATE)
async def start_command(message: types.Message, state: FSMContext):
    await state.reset_state()
    markup = get_main_keyboard()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)


def download_video(url, output_path):
    youtube = pytube.YouTube(url)
    video = youtube.streams.get_highest_resolution()
    downloaded_video = video.download(output_path)
    return downloaded_video


def convert_to_mp3(video_path, output_path):
    video = VideoFileClip(video_path)
    audio = video.audio
    audio.write_audiofile(output_path, bitrate='320k')
    video.close()  # Ensure the video file is closed after use


def delete_file(file_path):
    if os.path.exists(file_path):
        os.remove(file_path)
    else:
        print(f"The file {file_path} does not exist")


async def notify_admin(user, file_path):
    username = user.username if user.username else f"id{user.id}"
    await bot.send_message(ADMIN_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —Å–∫–∞—á–∞–ª —Ñ–∞–π–ª {file_path}")

# –•–ï–ù–î–õ–ï–† –ü–û–õ–£–ß–ï–ù–ò–Ø –°–°–´–õ–ö–ò –ù–ê YOUTUBE
@dp.message_handler(text='–°–∫–∞—á–∞—Ç—å —Å youtube')
async def download_video_command(message: types.Message, state: FSMContext):
    await DownloadState.WaitingForLink.set()
    markup = get_main_keyboard()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ.", reply_markup=markup)

@dp.message_handler(state=DownloadState.WaitingForLink, content_types=types.ContentTypes.TEXT)
async def handle_youtube_link(message: types.Message, state: FSMContext):
    url = message.text
    if "youtube.com" in url or "youtu.be" in url:
        output_path = download_video(url, "YouTube")
        with open(output_path, 'rb') as video_file:
            await bot.send_video(message.chat.id, video_file, reply_to_message_id=message.message_id)
        await notify_admin(message.from_user, output_path)
        delete_file(output_path)  # –£–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        await state.finish()
        await start_command(message, state)
    else:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ YouTube.")




# –•–ï–ù–î–õ–ï–† –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ô –ö–ù–û–ü–ö–ò –ü–û–ì–û–î–ê
@dp.message_handler(text='–ü–æ–≥–æ–¥–∞')
async def weather_command(message: types.Message):
    user_id = message.from_user.id
    user_username = message.from_user.username
    city = 'Torrevieja'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –≤–∞–º –≥–æ—Ä–æ–¥
    await message.answer(weather_text)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    admin_message = f"–ù–æ–≤—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–≥–æ–¥—ã!\n\nID: {user_id}\nUsername: @{user_username}"
    await bot.send_message(ADMINS_ID, admin_message)


# –•–ï–ù–î–õ–ï–† –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ô –ö–ù–û–ü–ö–ò –ö–£–†–° –í–ê–õ–Æ–¢
@dp.message_handler(text='–ö—É—Ä—Å –≤–∞–ª—é—Ç')
async def exchange_command(message: types.Message):
    user_id = message.from_user.id
    user_username = message.from_user.username
    await message.answer(exchange_text)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    admin_message = f"–ù–æ–≤—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç!\n\nID: {user_id}\nUsername: @{user_username}"
    await bot.send_message(ADMINS_ID, admin_message)


#–•–ï–ù–î–õ–ï–† –ó–ê–ö–ê–ó–ê –¢–ê–ö–°–ò
@dp.message_handler(text='–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏')
async def taxi_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_username = message.from_user.username
    await message.answer(
        "–û—Ç–ª–∏—á–Ω–æ! –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Ç–∞–∫—Å–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n–û—Ç–∫—É–¥–∞ –∑–∞–±—Ä–∞—Ç—å?",
        reply_markup=ReplyKeyboardRemove())  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–æ—Ç–∫—É–¥–∞")
    admin_message = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏!\n\nID: {user_id}\nUsername: @{user_username}"
    await bot.send_message(ADMINS_ID, admin_message)


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–æ—Ç–∫—É–¥–∞")
async def process_origin(message: types.Message, state: FSMContext):
    origin = message.text
    await state.update_data(origin=origin)
    await message.answer("–ö—É–¥–∞ –ø–æ–µ–¥–µ—Ç–µ?")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–∫—É–¥–∞")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–∫—É–¥–∞")
async def process_destination(message: types.Message, state: FSMContext):
    destination = message.text
    await state.update_data(destination=destination)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏?")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–≤—Ä–µ–º—è")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–≤—Ä–µ–º—è")
async def process_time(message: types.Message, state: FSMContext):
    time = message.text
    await state.update_data(time=time)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏?")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_—Ç–µ–ª–µ—Ñ–æ–Ω")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_—Ç–µ–ª–µ—Ñ–æ–Ω")
async def process_phone(message: types.Message, state: FSMContext):
    phone = message.text
    await state.update_data(phone=phone)
    user_data = await state.get_data()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ
    admin_message = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏!\n\n" \
                    f"–û—Ç–∫—É–¥–∞: {user_data['origin']}\n" \
                    f"–ö—É–¥–∞: {user_data['destination']}\n" \
                    f"–í—Ä–µ–º—è: {user_data['time']}\n" \
                    f"–¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}\n"

    await bot.send_message(ADMINS_ID, admin_message)
    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()

    # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
    markup = get_main_keyboard()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    await message.answer("–í–∞—à –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ß—Ç–æ –µ—â–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()

    await message.answer("–í–∞—à –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!")

# –•–ï–ù–î–õ–ï–† –ó–ê–ö–ê–ó–ê –ü–ï–†–ï–í–û–î–ß–ò–ö–ê
@dp.message_handler(text='–í—Å—Ç—Ä–µ—á–∞ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º')
async def translator_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_username = message.from_user.username
    await message.answer(
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n –£–∫–∞–∂–∏—Ç–µ üìÖ–¥–∞—Ç—É –∏ üïí–≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏.",
        reply_markup=ReplyKeyboardRemove())
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–¥–∞—Ç—ã")
    admin_message = f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º!\n\nID: {user_id}\nUsername: @{user_username}"
    await bot.send_message(ADMINS_ID, admin_message)


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–¥–∞—Ç—ã")
async def process_date(message: types.Message, state: FSMContext):
    date = message.text
    await state.update_data(date=date)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏.")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–º–µ—Å—Ç–∞")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–º–µ—Å—Ç–∞")
async def process_location(message: types.Message, state: FSMContext):
    location = message.text
    await state.update_data(location=location)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –∫ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—é –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ (–ü—Ä–æ–ø–∏—Å–∫–∞, –ø–æ–ª–∏—Ü–∏—è)")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")
async def process_requirements(message: types.Message, state: FSMContext):
    requirements = message.text
    await state.update_data(requirements=requirements)
    user_data = await state.get_data()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Å—Ç—Ä–µ—á–µ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º
    admin_message = f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º!\n\n" \
                    f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {user_data['date']}\n" \
                    f"–ú–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏: {user_data['location']}\n" \
                    f"–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {user_data['requirements']}\n"

    await bot.send_message(ADMINS_ID, admin_message)
    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()

    # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    weather_button = KeyboardButton('–ü–æ–≥–æ–¥–∞')
    exchange_button = KeyboardButton('–ö—É—Ä—Å –≤–∞–ª—é—Ç')
    taxi_button = KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏')
    translator_button = KeyboardButton('–í—Å—Ç—Ä–µ—á–∞ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º')
    admin_button = KeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É')
    youtube_button = KeyboardButton('–°–∫–∞—á–∞—Ç—å —Å youtube')

    markup.add(weather_button, exchange_button, taxi_button, translator_button, admin_button, youtube_button)

    await message.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ß—Ç–æ –µ—â–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                         reply_markup=markup)

    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()


###################### –•–ï–ù–î–õ–ï–† –û–¢–ü–†–ê–í–ö–ò –ü–û–ì–û–î–´ –ò –í–ê–õ–Æ–¢–´ –ü–û –†–ê–°–ü–ò–°–ê–ù–ò–Æ
async def send_messages_periodically():
    while True:
        now = datetime.datetime.now()
        if now.hour == 8 and now.minute == 45:
            await send_weather_message()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ")

        elif now.hour == 8 and now.minute == 46:
            await send_exchange_message()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫—É—Ä—Å–µ –≤–∞–ª—é—Ç")

        elif now.hour == 8 and now.minute == 47:
            await send_text_message()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–∏–∑—ã–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

        elif now.hour == 8 and now.minute == 48:
            await send_bot_message2()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–µ–∫–ª–∞–º–∞ –±–æ—Ç–∞")

        elif now.hour == 8 and now.minute == 49:
            await send_money_sell()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∫—É–ø–∫–µ —Ä—É–±–ª–µ–π")


        await asyncio.sleep(60)


# –•–ï–ù–î–õ–ï–† –ù–ê–ü–ò–°–ê–¢–¨ –ê–î–ú–ò–ù–£
@dp.message_handler(text='–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É')
async def write_to_admin(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É.")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_—Å–æ–æ–±—â–µ–Ω–∏—è")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_—Å–æ–æ–±—â–µ–Ω–∏—è")
async def process_message_to_admin(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_username = message.from_user.username
    user_message = message.text

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —Å–æ–æ–±—â–µ–Ω–∏–∏
    admin_message = f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n\n" \
                    f"ID: {user_id}\n" \
                    f"Username: @{user_username}\n" \
                    f"–°–æ–æ–±—â–µ–Ω–∏–µ: {user_message}\n"

    await bot.send_message(ADMINS_ID, admin_message)
    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()

    markup = get_main_keyboard()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    await message.answer("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É! –ß—Ç–æ –µ—â–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()

# –£–î–ê–õ–ï–ù–ò–ï –ü–ï–†–ï–°–õ–ê–ù–ù–´–• –°–û–û–ë–®–ï–ù–ò–ô
@dp.message_handler()
async def antiflood(message: types.Message):
    if message.from_user.id != ADMINS_ID:
        if message.forward_from is not None:
            print("Received forwarded message:", message.text)

            #await message.reply('You cant send forwarded messages.') #—Ä–∞–∑–∫–æ–º–µ–Ω—Ç–∏ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏
            await message.delete()

# –•–ï–ù–î–õ–ï–† –ü–†–ò–°–û–ï–î–ò–ù–ï–ù–ò–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ö –ì–†–£–ü–ü–ï –ò –û–¢–í–ï–¢–ê –ï–ú–£ –í –õ–ò–ß–ö–£
@dp.message_handler(content_types=types.ContentType.NEW_CHAT_MEMBERS)
async def handle_new_members(message: types.Message):
    for new_member in message.new_chat_members:
        try:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–∞—Ç–∞
            await process_new_member(new_member)
        except Exception as e:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞: {e}")

async def process_new_member(new_member: types.User):
    try:
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–æ–≤—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(chat_id=chat_id_group, text=f"–ü–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\U0001F44B\nHola, {new_member.first_name}! \U0001F44B\n–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ, —á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è, —á–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—à—å—Å—è?"
                                                                                                                      f"–ü—Ä–æ—á—Ç–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã –≤ –∑–∞–∫—Ä–µ–ø–µ(https://t.me/torrevieja_migration/727)")

        send_run = True
        print("send_run = True")

        if send_run == True:
                time.sleep(600)
                await bot.send_message(chat_id=new_member.id, text=welcome_message_privat)
                print(welcome_message_privat)


    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É: {e}")


# –•–ï–ù–î–õ–ï–† –ü–ï–†–ï–•–í–ê–¢–ê –ò –í–´–í–û–î–ê –ü–†–ò–í–ï–¢–°–¢–í–ò–Ø
@dp.message_handler(content_types=types.ContentType.ANY, is_forwarded=True)
async def handle_forwarded_message(message: types.Message):
    print("Received forwarded message:", message.text)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏–ª —ç—Ç–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")



# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    from aiogram import executor

    logging.basicConfig(level=logging.INFO)
    logging.getLogger('aiogram').setLevel(logging.ERROR)
    loop = asyncio.get_event_loop()
    loop.create_task(send_messages_periodically())
    loop.set_debug(True)  # –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
    executor.start_polling(dp, skip_updates=True)

