# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–¥–∞:

# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
import datetime  # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
import requests  # –ú–æ–¥—É–ª—å –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
import pytz  # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏


from source.config import EXCHANGE_TOKEN

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ API-–∫–ª—é—á–∞
# api_key_exchange = "80730760f799bc84a6bc9a06"

# –û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ CurrencyConverter
class MoneySellConverter:
    # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞
    def __init__(self, api_key=EXCHANGE_TOKEN):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.api_key = api_key
        self.timezone = pytz.timezone('Europe/Madrid')  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –Ω–∞ 'Europe/Madrid'
        self.days_of_week = {  # –°–ª–æ–≤–∞—Ä—å, —Å–æ–æ—Ç–Ω–æ—Å—è—â–∏–π –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ —Å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ–º
            0: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
            1: '–í—Ç–æ—Ä–Ω–∏–∫',
            2: '–°—Ä–µ–¥–∞',
            3: '–ß–µ—Ç–≤–µ—Ä–≥',
            4: '–ü—è—Ç–Ω–∏—Ü–∞',
            5: '–°—É–±–±–æ—Ç–∞',
            6: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
        }
        self.money_sell_text = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –æ–±–º–µ–Ω–Ω—ã–º –∫—É—Ä—Å–æ–º
        self.usd_rate = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ USD
        self.rub_rate = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ RUB
        self.uah_rate = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ UAH

    # –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
    def get_current_datetime(self):
        now = datetime.datetime.now(self.timezone)  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ
        day_of_week = now.weekday()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (0 - –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 1 - –≤—Ç–æ—Ä–Ω–∏–∫ –∏ —Ç.–¥.)
        formatted_datetime = now.strftime(f"{self.days_of_week[day_of_week]}, %d-%m-%Y, %H:%M")  # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å—Ç—Ä–æ–∫—É
        return formatted_datetime  # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏

    # –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
    def get_exchange_rates(self):
        url = f"https://v6.exchangerate-api.com/v6/{self.api_key}/latest/EUR"  # URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
        response = requests.get(url)  # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ GET-–∑–∞–ø—Ä–æ—Å–∞ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL
        data = response.json()  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ç–≤–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
        return data.get("conversion_rates")  # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –∏–∑ –¥–∞–Ω–Ω—ã—Ö

    # –ú–µ—Ç–æ–¥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã —Å —É—á–µ—Ç–æ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –º–∞—Ä–∂–∏
    def convert_currency(self, margin_coefficient):
        formatted_datetime = self.get_current_datetime()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
        exchange_rates = self.get_exchange_rates()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤–∞–ª—é—Ç
        if exchange_rates is None:
            print("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤–∞–ª—é—Ç.")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö —Ç—Ä–µ–±—É–µ–º—ã—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
        if "USD" not in exchange_rates or "RUB" not in exchange_rates or "UAH" not in exchange_rates:
            print("–û–¥–∏–Ω –∏–∑ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç (USD, RUB, UAH) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ.")
            return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
        self.usd_rate = exchange_rates["USD"]
        self.rub_rate = exchange_rates["RUB"]
        self.uah_rate = exchange_rates["UAH"]

        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ —Å —É—á–µ—Ç–æ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –º–∞—Ä–∂–∏
        eur_to_usd = 1 / (self.usd_rate * margin_coefficient)
        eur_to_rub = 1 / (self.rub_rate * margin_coefficient)
        eur_to_uah = 1 / (self.uah_rate * margin_coefficient)
        usd_to_eur = 1 / eur_to_usd
        rub_to_eur = 1 / eur_to_rub
        uah_to_eur = 1 / eur_to_uah

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –æ–±–º–µ–Ω–Ω—ã–º –∫—É—Ä—Å–æ–º
        self.money_sell_text = (
            f"–°—Ä–æ—á–Ω–æ –∫—É–ø–∏–º –∑–∞ –ï–≤—Ä–æ —Ä—É–±–ª–∏ –∏ –≥—Ä–∏–≤–Ω—ã\n"
            f"–¶–µ–Ω–∞ –Ω–∞ {formatted_datetime}\n"
            f"üí∂ –ó–∞ 1 üá™üá∫EUR –∫—É–ø–∏–º: {rub_to_eur:.2f} üá∑üá∫RUB\n"
            f"üí∂ –ó–∞ 1 üá™üá∫EUR –∫—É–ø–∏–º: {uah_to_eur:.2f} üá∫üá¶UAH\n"
        )

        return self.money_sell_text, self.usd_rate, self.rub_rate, self.uah_rate

class CurrencyConverter:
    def __init__(self, api_key=EXCHANGE_TOKEN):
        self.api_key = api_key
        self.timezone = pytz.timezone('Europe/Madrid')
        self.days_of_week = {
            0: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
            1: '–í—Ç–æ—Ä–Ω–∏–∫',
            2: '–°—Ä–µ–¥–∞',
            3: '–ß–µ—Ç–≤–µ—Ä–≥',
            4: '–ü—è—Ç–Ω–∏—Ü–∞',
            5: '–°—É–±–±–æ—Ç–∞',
            6: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
        }
        self.exchange_text = None
        self.usd_rate = None
        self.rub_rate = None
        self.uah_rate = None

    def get_current_datetime(self):
        now = datetime.datetime.now(self.timezone)
        day_of_week = now.weekday()
        formatted_datetime = now.strftime(f"{self.days_of_week[day_of_week]}, %d-%m-%Y, %H:%M")
        return formatted_datetime

    def get_exchange_rates(self):
        url = f"https://v6.exchangerate-api.com/v6/{self.api_key}/latest/EUR"
        response = requests.get(url)
        data = response.json()
        return data.get("conversion_rates")

    def convert_currency(self):
        formatted_datetime = self.get_current_datetime()
        exchange_rates = self.get_exchange_rates()

        if exchange_rates is None:
            print("–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –≤–∞–ª—é—Ç.")
            return

        if "USD" not in exchange_rates or "RUB" not in exchange_rates or "UAH" not in exchange_rates:
            print("–û–¥–∏–Ω –∏–∑ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç (USD, RUB, UAH) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ.")
            return

        self.usd_rate = exchange_rates["USD"]
        self.rub_rate = exchange_rates["RUB"]
        self.uah_rate = exchange_rates["UAH"]

        eur_to_usd = 1 / self.usd_rate
        eur_to_rub = 1 / self.rub_rate
        eur_to_uah = 1 / self.uah_rate
        usd_to_eur = 1 / eur_to_usd
        rub_to_eur = 1 / eur_to_rub
        uah_to_eur = 1 / eur_to_uah

        self.exchange_text = (f"–ö—É—Ä—Å üá™üá∫EUR –Ω–∞ {formatted_datetime}\n"
            f"üí∂ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å 1 üá™üá∫EUR, –Ω—É–∂–Ω–æ –æ—Ç–¥–∞—Ç—å: {usd_to_eur:.2f} üá∫üá∏USD\n"
            f"üí∂ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å 1 üá™üá∫EUR, –Ω—É–∂–Ω–æ –æ—Ç–¥–∞—Ç—å: {rub_to_eur:.2f} üá∑üá∫RUB\n"
            f"üí∂ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å 1 üá™üá∫EUR, –Ω—É–∂–Ω–æ –æ—Ç–¥–∞—Ç—å: {uah_to_eur:.2f} üá∫üá¶UAH\n")

        return self.exchange_text, self.usd_rate, self.rub_rate, self.uah_rate

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞
api_key_exchange = "80730760f799bc84a6bc9a06"
converter = CurrencyConverter(api_key_exchange)
exchange_text, usd_rate, rub_rate, uah_rate = converter.convert_currency()