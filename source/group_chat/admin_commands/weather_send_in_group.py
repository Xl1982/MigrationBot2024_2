import datetime
import asyncio

from aiogram import types

from source.bot_init import dp, bot
from source.single_chat.weather.get_weather_info import get_weather_forecast


from .config_chat import config_chat


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º –ø–æ–≥–æ–¥—ã
async def send_weather_forecast(chat_id: int):
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
    times = ["09:00", "12:00", "15:00", "18:00", "21:00"]

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    current_date = datetime.datetime.now().date()

    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã
    forecast_message = ""

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è, –Ω–∞—á–∏–Ω–∞—è —Å —Ç–µ–∫—É—â–µ–≥–æ
    for i in range(5):
        # –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
        target_date = current_date + datetime.timedelta(days=i)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –ø–µ—Ä–≤—ã–º –¥–Ω–µ–º
        is_first_day = (i == 0)

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–Ω—è –∏ –≤—Ä–µ–º–µ–Ω–∏
        forecast = get_weather_forecast(target_date, datetime.time(9, 0), city_name='Torrevieja')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–Ω—è
        if forecast:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –ø—Ä–æ–≥–Ω–æ–∑–∞
            first_time_forecast = forecast[0]

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–≥–æ–¥—ã
            weather_emoji = ""
            if first_time_forecast['description'] == '–Ø—Å–Ω–æ':
                weather_emoji = "‚òÄÔ∏è"
            elif first_time_forecast['description'] == '–î–æ–∂–¥—å':
                weather_emoji = "üåßÔ∏è"
            elif first_time_forecast['description'] == '–°–Ω–µ–≥':
                weather_emoji = "‚ùÑÔ∏è"
            else:
                weather_emoji = "‚òÅÔ∏è"

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞
            if is_first_day:
                # –í—ã–≤–æ–¥–∏–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è
                message = f"üåç ***{target_date.strftime('%d.%m.%Y')}***\n"
                message += f"{weather_emoji} –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ Torrevieja:\n"
                message += f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞: {first_time_forecast['temperature']}¬∞C\n"
                message += f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {first_time_forecast['humidity']}%\n"
                message += f"üå¨Ô∏è –î–∞–≤–ª–µ–Ω–∏–µ: {first_time_forecast['pressure']} –º–º.—Ä—Ç.—Å—Ç\n"
                message += f"üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {first_time_forecast['wind_speed']} –º/c\n"
                message += f"‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {first_time_forecast['cloudiness']}%\n"
                message += f"üåÖ –í—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ —Å–æ–ª–Ω—Ü–∞: {first_time_forecast['sunrise'].strftime('%H:%M')}\n"
                message += f"üåá –í—Ä–µ–º—è –∑–∞–∫–∞—Ç–∞ —Å–æ–ª–Ω—Ü–∞: {first_time_forecast['sunset'].strftime('%H:%M')}\n"
                message += f"üåû –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!\n"
                forecast_message += f"{message}{'-' * 52}\n\n"
            else:
                # –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –¥–Ω–µ–π
                simplified_message = f'{"-" * 52}\n'
                simplified_message += f"{target_date.strftime('%d.%m.%Y')}\n"
                simplified_message += f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {first_time_forecast['temperature']}¬∞C\n"
                simplified_message += f"{weather_emoji} –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã: {first_time_forecast['description']}\n"
                simplified_message += f"üí® –û–±–ª–∞—á–Ω–æ—Å—Ç—å: {first_time_forecast['cloudiness']}%\n"
                simplified_message += f'{"-" * 52}\n\n'
                forecast_message += simplified_message 
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º
            forecast_message += f"–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –¥–ª—è {target_date.strftime('%d.%m.%Y')}\n\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç Telegram
    await bot.send_message(chat_id, forecast_message, parse_mode=types.ParseMode.MARKDOWN)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
async def check_weather_time(chat_id):
    while config_chat['weather_message']:
        print('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≥–æ–¥—ã')
        now = datetime.datetime.now()
        target_time_one = datetime.time(8, 50)  # –ó–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è (8:50 —É—Ç—Ä–∞)
        target_time_two = datetime.time(8, 52)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∑–∞–¥–∞–Ω–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏
        if target_time_one < now.time() < target_time_two:
            # –ó–¥–µ—Å—å –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç
            await send_weather_forecast(chat_id)

            print("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º –ø–æ–≥–æ–¥—ã...")

            await asyncio.sleep(300)
        else:
            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–¥–∞–Ω–Ω–æ–º—É, –∂–¥–µ–º 1 –º–∏–Ω—É—Ç—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
            await asyncio.sleep(60)


@dp.message_handler(lambda message: message.chat.type in (types.ChatType.GROUP, types.ChatType.SUPERGROUP) and 
                    message.text == '/weather on')
async def weather_send_message_on(message: types.Message):
    config_chat['weather_message'] = True
    config_chat['chat_id'] = message.chat.id
    print("–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–≥–æ–¥—ã")
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π chat_id
    asyncio.ensure_future(check_weather_time(message.chat.id))

    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–≥–æ–¥—ã –≤–∫–ª—é—á–µ–Ω–∞. –ï–∂–µ–¥–Ω–µ–≤–Ω–æ - –≤ 8:50 —É—Ç—Ä–∞.')

    print("–§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–∏–ª–∞—Å—å, –ø–æ–≥–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞—Å—Å—ã–ª–∞—Ç—å—Å—è")



@dp.message_handler(lambda message: message.chat.type in (types.ChatType.SUPERGROUP, types.ChatType.GROUP) and
                    message.text == '/weather off')
async def weather_send_message_off(message: types.Message):
    config_chat['weather_message'] = False
    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–≥–æ–¥—ã –≤—ã–∫–ª—é—á–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É "/weather on"')