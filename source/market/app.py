
from aiogram import executor, types, dispatcher
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove

from source.market.filters import IsUser, IsAdmin
from source.config import MARKET_ADMINS
from source.single_chat.admin_commands.start import check_admins
from source.market import handlers
from source import config
from source.data.classes.admin_manager import AdminsManager
from source.bot_init import dp, bot
from source.single_chat.admin_commands.start import info_handler_two
from source.single_chat.start_handler import start_work

text = '''
üõçÔ∏è –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ –∏ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∏–≥–ª—è–Ω—É–≤—à–∏–µ—Å—è —Ç–æ–≤–∞—Ä—ã –≤–æ–∑–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /menu.
üí∞ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –Ω–∞–ª–∏—á–Ω—ã–º–∏ –≤ –µ–≤—Ä–æ.
‚ùì –í–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã? –ù–µ –ø—Ä–æ–±–ª–µ–º–∞! –ö–æ–º–∞–Ω–¥–∞ /sos –ø–æ–º–æ–∂–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç–∞—Ä–∞—é—Ç—Å—è –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –æ—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è.
    '''
text_for_admin = text + ('\n–í—ã–±–µ—Ä–∏ –æ—Ç —á—å–µ–π —Ä–æ–ª–∏ –±—É–¥–µ—à—å –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–∞—Ä–∫–µ—Ç. <b>–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∞</b> –ø–æ–∑–≤–æ–ª–∏—Ç –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, –∞ <b>—Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∑–∞–∫–∞–∑–∞.'
                         ' –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /menu (–º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞ –Ω–µ—ë –Ω–∞–∂–∞—Ç—å)')

user_message = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
admin_message = '–ê–¥–º–∏–Ω'

@dp.callback_query_handler(lambda c: c.data == 'market')
async def cmd_start_admin(query: types.CallbackQuery):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(user_message, admin_message)
    await bot.delete_message(query.message.chat.id, query.message.message_id)
    await query.answer()
    await query.message.answer(text_for_admin, reply_markup=markup)

@dp.message_handler(lambda message: message.chat.type == types.ChatType.PRIVATE, text='–ú–∞–≥–∞–∑–∏–Ω')
async def cmd_start(message: types.Message):

    await message.answer(text)
    

@dp.message_handler(text=user_message)
async def user_mode(message: types.Message):
    user_id = message.from_user.id
    if user_id in MARKET_ADMINS:
        MARKET_ADMINS.remove(user_id)
    await message.answer('–í–∫–ª—é—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–µ–∂–∏–º.', reply_markup=ReplyKeyboardRemove())


@dp.message_handler(text=admin_message)
async def admin_mode(message: types.Message):
    cid = message.chat.id
    if cid not in MARKET_ADMINS:
        MARKET_ADMINS.append(cid)

    await message.answer('–í–∫–ª—é—á–µ–Ω –∞–¥–º–∏–Ω—Å–∫–∏–π —Ä–µ–∂–∏–º.', reply_markup=ReplyKeyboardRemove())


@dp.callback_query_handler(IsAdmin(), lambda c: c.data == 'market_exit', state='*')
async def market_exit_handler(query: types.CallbackQuery, state: dispatcher.FSMContext = None):
    await bot.delete_message(query.message.chat.id, query.message.message_id)
    await query.answer()
    await info_handler_two(query.message)
    if state:
        await state.finish()

@dp.callback_query_handler(IsUser(), lambda c: c.data == 'market_exit', state='*')
async def market_exit_handler(query: types.CallbackQuery, state: dispatcher.FSMContext = None):
    await bot.delete_message(query.message.chat.id, query.message.message_id)
    await query.answer()
    await start_work(query.message)
    if state:
        await state.finish()
