from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import asyncio
import datetime
import re
from aiogram.types import KeyboardButtonPollType
from source.main_handlers.states import TranslatorMeeting

from aiogram.utils import executor

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —á–∞—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
from source.config import BOT_TOKEN, CHAT_ID_TORA, api_key, api_exchange, ADMINS_ID

CHAT_ID = CHAT_ID_TORA


# –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–≥–æ–¥–æ–π –∏ –æ–±–º–µ–Ω–Ω—ã–º –∫—É—Ä—Å–æ–º
from source.weather.pogodaTor import WeatherAPI, weather_text
from source.main_handlers.xchange010 import CurrencyConverter, exchange_text

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–≥–æ–¥–µ
async def send_weather_message():
    await bot.send_message(CHAT_ID, weather_text)


# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ–±–º–µ–Ω–Ω–æ–º –∫—É—Ä—Å–µ
async def send_exchange_message():
    await bot.send_message(CHAT_ID, exchange_text)

group_link = "https://t.me/torrevieja_migration"

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ  –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def send_text_message():
    message = f"""

üí¨ –£–≤–∞–∂–∞–µ–º—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏!

üôå –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π –∏ –∑–Ω–∞–∫–æ–º—ã—Ö, —á—Ç–æ–±—ã —Ä–∞—Å—à–∏—Ä–∏—Ç—å –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –µ—â–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ.

üîó[https://t.me/torrevieja_migration]({group_link})üë•

üåü –ù–∞—à–∞ –≥—Ä—É–ø–ø–∞ - —ç—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è, –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –æ–±–º–µ–Ω–æ–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.

üìÖ –¢–∞–∫–∂–µ, –±—É–¥–µ–º —Ä–∞–¥—ã, –µ—Å–ª–∏ –≤—ã –±—É–¥–µ—Ç–µ –¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ü–µ—Ä—Ç–∞—Ö, –≤—ã—Å—Ç–∞–≤–∫–∞—Ö, —Ñ–µ—Å—Ç–∏–≤–∞–ª—è—Ö –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å —Å–æ–æ–±—â–∞—Ç—å –æ –Ω–∏—Ö –≤ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ. üì£

ü§ù –ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –∫ –æ–±–º–µ–Ω—É –æ–ø—ã—Ç–æ–º –∏ –∑–Ω–∞–Ω–∏—è–º–∏. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–µ–Ω —Å–æ–≤–µ—Ç, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –∏—Ö –≤ –Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ. üí°

üì¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ –≤–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –¥–∏–Ω–∞–º–∏—á–Ω–æ–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ! üí™

üéâ –î–∞–≤–∞–π—Ç–µ —Å–¥–µ–ª–∞–µ–º –Ω–∞—à—É –≥—Ä—É–ø–ø—É –º–µ—Å—Ç–æ–º, –≥–¥–µ –º—ã –≤—Å—Ç—Ä–µ—á–∞–µ–º—Å—è, –æ–±—â–∞–µ–º—Å—è –∏ —É–∑–Ω–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏! üåü

#Community #–û–±—â–µ–Ω–∏–µ #–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è #–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞
"""
    await bot.send_message(CHAT_ID, message)


###### –•–ï–ù–î–õ–ï–† –û–¢–ü–†–ê–í–ö–ò –†–ï–ö–õ–ê–ú–´ –ë–û–¢–ê
async def send_bot_message():
    send_bot_message = """
üéàüéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–æ—Ä—Ä–µ–≤—å–µ—Ö—É!* üéâüéà
    
ü§ñ–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞!üë•

–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞–∂–º–∏—Ç–µ https://t.me/Torrevieja_delivery_bot
    
–ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞, –Ω–∞–∂–º–∏—Ç–µ start
–í—ã —Å–º–æ–∂–µ—Ç–µ
    
üîµ **–ë–µ—Å–ø–ª–∞—Ç–Ω–æ:** üîµ
1Ô∏è‚É£ üå§ **–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –ø–æ–≥–æ–¥—É –≤ –¢–æ—Ä—Ä–µ–≤—å–µ—Ö–∞.** 
2Ô∏è‚É£ üí± **–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç.** 

üî¥ –ü–ª–∞—Ç–Ω—ã–µ —É—Å–ª—É–≥–∏ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤: üî¥
3Ô∏è‚É£ üöñ ** –ó–∞–∫–∞–∑–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –¥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞/–¥—Ä—É–≥–æ–≥–æ –≥–æ—Ä–æ–¥–∞.** 
4Ô∏è‚É£ üó£ ** –ù–∞–∑–Ω–∞—á–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º* –¥–ª—è –ø–æ–¥–∞—á–∏ –ø—Ä–æ–ø–∏—Å–∫–∏, NIE, SIE, –ø–æ–ª–∏—Ü–∏—è.** 

üí∞ **–û–ø–ª–∞—Ç–∞ –ø–æ —Ñ–∞–∫—Ç—É –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥.* –ù–∞–ª–∏—á–Ω—ã–µ –∏ –ø–µ—Ä–µ–≤–æ–¥–æ–º. –µ–≤—Ä–æ, —Ä—É–±–ª–∏, –≥—Ä–∏–≤–Ω–∞ –∏ –¥–æ–ª–ª–∞—Ä—ã.** 
"""
    await bot.send_message(CHAT_ID, send_bot_message)





# –•–ï–ù–î–õ–ï–† –ö–û–ú–ê–ù–î–´  /start
@dp.message_handler(commands=['start'], chat_type=types.ChatType.PRIVATE)
async def start_command(message: types.Message, state: FSMContext):
    await state.reset_state()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    weather_button = KeyboardButton('–ü–æ–≥–æ–¥–∞')
    exchange_button = KeyboardButton('–ö—É—Ä—Å –≤–∞–ª—é—Ç')
    taxi_button = KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏')
    translator_button = KeyboardButton('–í—Å—Ç—Ä–µ—á–∞ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º')
    markup.add(weather_button, exchange_button, taxi_button, translator_button)

    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)


# –•–ï–ù–î–õ–ï–† –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ô –ö–ù–û–ü–ö–ò –ü–û–ì–û–î–ê
@dp.message_handler(text='–ü–æ–≥–æ–¥–∞')
async def weather_command(message: types.Message):
    user_id = message.from_user.id
    user_username = message.from_user.username
    city = 'Torrevieja'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –≤–∞–º –≥–æ—Ä–æ–¥
    await message.answer(weather_text)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    admin_message = f"–ù–æ–≤—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–≥–æ–¥—ã!\n\nID: {user_id}\nUsername: @{user_username}"
    await bot.send_message(ADMINS_ID, admin_message)


# –•–ï–ù–î–õ–ï–† –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ô –ö–ù–û–ü–ö–ò –ö–£–†–° –í–ê–õ–Æ–¢
@dp.message_handler(text='–ö—É—Ä—Å –≤–∞–ª—é—Ç')
async def exchange_command(message: types.Message):
    user_id = message.from_user.id
    user_username = message.from_user.username
    await message.answer(exchange_text)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    admin_message = f"–ù–æ–≤—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç!\n\nID: {user_id}\nUsername: @{user_username}"
    await bot.send_message(ADMINS_ID, admin_message)


########################### –•–ï–ù–î–õ–ï–† –ó–ê–ö–ê–ó–ê –¢–ê–ö–°–ò
@dp.message_handler(text='–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏')
async def taxi_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_username = message.from_user.username
    await message.answer(
        "–û—Ç–ª–∏—á–Ω–æ! –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Ç–∞–∫—Å–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n–û—Ç–∫—É–¥–∞ –∑–∞–±—Ä–∞—Ç—å?",
        reply_markup=ReplyKeyboardRemove())  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–æ—Ç–∫—É–¥–∞")
    admin_message = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏!\n\nID: {user_id}\nUsername: @{user_username}"
    await bot.send_message(ADMINS_ID, admin_message)


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–æ—Ç–∫—É–¥–∞")
async def process_origin(message: types.Message, state: FSMContext):
    origin = message.text
    await state.update_data(origin=origin)
    await message.answer("–ö—É–¥–∞ –ø–æ–µ–¥–µ—Ç–µ?")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–∫—É–¥–∞")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–∫—É–¥–∞")
async def process_destination(message: types.Message, state: FSMContext):
    destination = message.text
    await state.update_data(destination=destination)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ–µ–∑–¥–∫–∏?")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–≤—Ä–µ–º—è")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–≤—Ä–µ–º—è")
async def process_time(message: types.Message, state: FSMContext):
    time = message.text
    await state.update_data(time=time)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏?")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_—Ç–µ–ª–µ—Ñ–æ–Ω")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_—Ç–µ–ª–µ—Ñ–æ–Ω")
async def process_phone(message: types.Message, state: FSMContext):
    phone = message.text
    await state.update_data(phone=phone)
    user_data = await state.get_data()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞–∫–∞–∑–µ
    admin_message = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏!\n\n" \
                    f"–û—Ç–∫—É–¥–∞: {user_data['origin']}\n" \
                    f"–ö—É–¥–∞: {user_data['destination']}\n" \
                    f"–í—Ä–µ–º—è: {user_data['time']}\n" \
                    f"–¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}\n"

    await bot.send_message(ADMINS_ID, admin_message)
    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()

    # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    weather_button = KeyboardButton('–ü–æ–≥–æ–¥–∞')
    exchange_button = KeyboardButton('–ö—É—Ä—Å –≤–∞–ª—é—Ç')
    taxi_button = KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏')
    translator_button = KeyboardButton('–í—Å—Ç—Ä–µ—á–∞ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º')
    markup.add(weather_button, exchange_button, taxi_button, translator_button)

    await message.answer("–í–∞—à –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ß—Ç–æ –µ—â–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()

    await message.answer("–í–∞—à –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!")

####################### –•–ï–ù–î–õ–ï–† –ó–ê–ö–ê–ó–ê –ü–ï–†–ï–í–û–î–ß–ò–ö–ê

# –•–ï–ù–î–õ–ï–† –ó–ê–ö–ê–ó–ê –ü–ï–†–ï–í–û–î–ß–ò–ö–ê
@dp.message_handler(text='–í—Å—Ç—Ä–µ—á–∞ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º')
async def translator_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_username = message.from_user.username
    await message.answer("–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n –£–∫–∞–∂–∏—Ç–µ üìÖ–¥–∞—Ç—É –∏ üïí–≤—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏.",reply_markup=ReplyKeyboardRemove())
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–¥–∞—Ç—ã")
    admin_message = f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º!\n\nID: {user_id}\nUsername: @{user_username}"
    await bot.send_message(ADMINS_ID, admin_message)


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–¥–∞—Ç—ã")
async def process_date(message: types.Message, state: FSMContext):
    date = message.text
    await state.update_data(date=date)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏.")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_–º–µ—Å—Ç–∞")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_–º–µ—Å—Ç–∞")
async def process_location(message: types.Message, state: FSMContext):
    location = message.text
    await state.update_data(location=location)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º–∞—Ç–∏–∫—É –∫ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—é –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ (–ü—Ä–æ–ø–∏—Å–∫–∞, –ø–æ–ª–∏—Ü–∏—è)")
    await state.set_state("–æ–∂–∏–¥–∞–Ω–∏–µ_—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")


@dp.message_handler(state="–æ–∂–∏–¥–∞–Ω–∏–µ_—Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")
async def process_requirements(message: types.Message, state: FSMContext):
    requirements = message.text
    await state.update_data(requirements=requirements)
    user_data = await state.get_data()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Å—Ç—Ä–µ—á–µ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º
    admin_message = f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º!\n\n" \
                    f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {user_data['date']}\n" \
                    f"–ú–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏: {user_data['location']}\n" \
                    f"–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {user_data['requirements']}\n"

    await bot.send_message(ADMINS_ID, admin_message)
    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()

    # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    weather_button = KeyboardButton('–ü–æ–≥–æ–¥–∞')
    exchange_button = KeyboardButton('–ö—É—Ä—Å –≤–∞–ª—é—Ç')
    taxi_button = KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏')
    translator_button = KeyboardButton('–í—Å—Ç—Ä–µ—á–∞ —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º')
    markup.add(weather_button, exchange_button, taxi_button, translator_button)

    await message.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ß—Ç–æ –µ—â–µ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)

    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.finish()







###################### –•–ï–ù–î–õ–ï–† –û–¢–ü–†–ê–í–ö–ò –ü–û–ì–û–î–´ –ò –í–ê–õ–Æ–¢–´ –ü–û –†–ê–°–ü–ò–°–ê–ù–ò–Æ
async def send_messages_periodically():
    while True:
        now = datetime.datetime.now()
        if now.hour == 10 and now.minute == 10:
            await send_weather_message()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ")

        elif now.hour == 12 and now.minute == 00:
            await send_exchange_message()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫—É—Ä—Å–µ –≤–∞–ª—é—Ç")

        elif now.hour == 14 and now.minute == 00:
            await send_text_message()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–∏–∑—ã–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

        elif now.hour == 17 and now.minute == 00:
            await send_bot_message()
            print("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–µ–∫–ª–∞–º–∞ –±–æ—Ç–∞")

        await asyncio.sleep(60)


#################### –•–ï–ù–î–õ–ï–† –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –°–°–´–õ–û–ö
# @dp.message_handler(content_types=types.ContentType.TEXT)
# async def handle_text_message(message: types.Message):
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Å—ã–ª–∫—É
#     if re.search(r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', message.text):
#         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—Ä–µ—Ç–µ —Å—Å—ã–ª–æ–∫
#         await message.reply("–°—Å—ã–ª–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ!\n"
#                             "–ö—Ä–æ–º–µ –ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö!\n"
#                             "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥–º–∏–Ω—É, –æ–Ω —Ä–∞–∑–º–µ—Å—Ç–∏—Ç https://t.me/Torrevija\n!")
#
#         # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–æ–π
#         await message.delete()




# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.create_task(send_messages_periodically())
    executor.start_polling(dp, loop=loop)
